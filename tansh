#!/usr/bin/env python
"""
A little *nix shell written for python.
"""
import cmd, os, sys

sh = cmd.Cmd()
sh.prompt = "> "

def cmd(f):
  setattr(sh, f.__name__, f)
  return f

# delegate to user's main shell (bash or whatever):
@cmd
def default(line):
    try:
        os.system(line)
    except:
        pass

# add 'cd' command since python won't change directories
# when the child process does:
sh.do_cd = lambda path : os.chdir(path)

# allow extending the command list at runtime:
def do_def(line):
    """
    define a new command.
    ex:
    > def sum sum([ int(x) for x in arg.split() ])
    > sum 1 2 3 4 5
    """
    head, tail = line.split(' ', 1)
    code = 'lambda arg: sys.stdout.write(str(eval(%r))+ "\\n")' % tail
    try:
        func = eval(code)
        setattr(sh, "do_%s" % head, func)
    except Exception as e:
        print e

sh.do_def = do_def ; del do_def

go = lambda : sh.cmdloop()
go()
